//- Post Detail Page
.post-wrapper
  //- Table of Contents Sidebar
  .toc-sidebar
    .toc-container
      .toc-title 目录
      .toc-content#table-of-contents
        // Table of contents will be generated by JavaScript

  //- Main Post Content
  article.post-container
    .post-header
      if page.cover || (theme.theme_config.post && theme.theme_config.post.use_default_cover)
        .post-cover
          - function getCoverPath(cover, path) {
          -   if (cover.startsWith('/')) return cover;
          -   return path.replace(/\\/g, '/').split('/').slice(0, -1).join('/') + '/' + cover;
          - }
          - var defaultCover = theme.theme_config.post && theme.theme_config.post.default_cover ? theme.theme_config.post.default_cover : '/images/19.png'
          - var coverPath = page.cover ? getCoverPath(page.cover, page.path) : defaultCover
          img(src=url_for(coverPath), alt=page.title)

      .post-meta
        .post-category
          if page.categories && page.categories.length
            a(href=url_for(page.categories.first().path))= page.categories.first().name

        .post-date
          time(datetime=date_xml(page.date))= date(page.date, "MMMM DD, YYYY")

        .post-author
          if page.author
            span By #{page.author}
          else
            span By #{config.author}

      h1.post-title= page.title

      .post-tags
        if page.tags && page.tags.length
          each tag in page.tags.toArray()
            a.tag(href=url_for(tag.path))= tag.name

    // AI摘要模块容器
    #post-ai-container

    .post-content
      != page.content

    // 初始化AI摘要
    if theme.ai_summary && theme.ai_summary.enable
      script.
        document.addEventListener('DOMContentLoaded', function() {
          if (typeof ChucklePostAI !== 'undefined') {
            // 获取按钮文本，如果未定义则使用默认值
            const buttons = [
              "#{theme.ai_summary.buttons && theme.ai_summary.buttons[0] || '介绍自己😎'}",
              "#{theme.ai_summary.buttons && theme.ai_summary.buttons[1] || '来点灵感💡'}",
              "#{theme.ai_summary.buttons && theme.ai_summary.buttons[2] || '生成AI简介🤖'}"
            ];

            new ChucklePostAI({
              el: '#post-ai-container',
              title_el: '.post-title',
              summary_directly: #{theme.ai_summary.summary_directly},
              interface: {
                name: "#{theme.ai_summary.ai_name || '然-AI'}",
                introduce: "#{theme.ai_summary.ai_introduce || '我是文章辅助AI: 然-AI，一个基于deepseek的强大语言模型，有什么可以帮到您？😊'}",
                version: "#{theme.ai_summary.ai_version || 'deepseek'}",
                button: buttons
              }
            });
          }
        });

    // 传递TOC配置给前端
    script.
      // 创建全局TOC配置对象
      window.tocConfig = {
        empty_toc_behavior: "#{theme.toc && theme.toc.empty_toc_behavior || 'hide'}"
      };

    .post-navigation
      if page.prev
        .post-nav.prev
          a(href=url_for(page.prev.path))
            span.nav-label ← Previous
            span.nav-title= page.prev.title

      if page.next
        .post-nav.next
          a(href=url_for(page.next.path))
            span.nav-label Next →
            span.nav-title= page.next.title

    if theme.share && theme.share.enable
      .post-share
        h3.share-title Share this article
        .share-buttons
          if theme.share.options.twitter
            a.share-btn.twitter(href="https://twitter.com/intent/tweet?text=" + encodeURIComponent(page.title) + "&url=" + encodeURIComponent(url_for(page.path)), target="_blank", rel="noopener")
              span Twitter
          if theme.share.options.facebook
            a.share-btn.facebook(href="https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(url_for(page.path)), target="_blank", rel="noopener")
              span Facebook
          if theme.share.options.linkedin
            a.share-btn.linkedin(href="https://www.linkedin.com/sharing/share-offsite/?url=" + encodeURIComponent(url_for(page.path)), target="_blank", rel="noopener")
              span LinkedIn
          if theme.share.options.wechat
            a.share-btn.wechat(href="#", data-wechat=url_for(page.path))
              span 微信
          if theme.share.options.qq
            a.share-btn.qq(href="https://connect.qq.com/widget/shareqq/index.html?url=" + encodeURIComponent(url_for(page.path)) + "&title=" + encodeURIComponent(page.title), target="_blank", rel="noopener")
              span QQ
          if theme.share.options.weibo
            a.share-btn.weibo(href="https://service.weibo.com/share/share.php?url=" + encodeURIComponent(url_for(page.path)) + "&title=" + encodeURIComponent(page.title), target="_blank", rel="noopener")
              span 微博
          if theme.share.options.copy_link
            a.share-btn.copy(href="#", data-copy=url_for(page.path))
              span Copy Link

//- Comments Section
if theme.comments && theme.comments.enable
  section.comments-section
    .comments-container
      h2.comments-title Comments
      .comments-content
        != partial('_partial/comments', { page: page })

//- Related Posts
if page.related_posts && page.related_posts.length
  section.related-posts
    .related-container
      h2.related-title Related Posts
      .related-grid
        each post in page.related_posts.slice(0, 3)
          .related-card
            if post.cover || (theme.theme_config.post && theme.theme_config.post.use_default_cover)
              .related-image
                a(href=url_for(post.path))
                  - function getCoverPath(cover, path) {
                  -   if (cover.startsWith('/')) return cover;
                  -   return path.replace(/\\/g, '/').split('/').slice(0, -1).join('/') + '/' + cover;
                  - }
                  - var defaultCover = theme.theme_config.post && theme.theme_config.post.default_cover ? theme.theme_config.post.default_cover : '/images/19.png'
                  - var coverPath = post.cover ? getCoverPath(post.cover, post.path) : defaultCover
                  img(src=url_for(coverPath), alt=post.title)
            .related-content
              h4.related-title
                a(href=url_for(post.path))= post.title
              .related-date
                time(datetime=date_xml(post.date))= date(post.date, "MMM DD, YYYY")
